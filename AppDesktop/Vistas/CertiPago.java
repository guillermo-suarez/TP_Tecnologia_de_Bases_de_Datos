/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import java.sql.*;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class CertiPago extends javax.swing.JFrame {
    
    private Connection con;
    private Statement sqlStmn;
    private ResultSet datosMes;
    private ResultSet datosAcum;
    private ResultSet datosObra;
    private ListSelectionModel tblListCertiMesModel;
    private ListSelectionModel tblListCertiAcumModel;
    private String SQL;
    private Integer IdObra;
    private Date fechaCerti;

    public CertiPago(Connection con, Statement sqlStmn, Integer NumObra, Integer NroCerti) {
        initComponents();
        this.con = con;
        this.sqlStmn = sqlStmn;
        tblListCertiMesModel = tblMes.getSelectionModel();
        tblListCertiAcumModel = tblAcumulado.getSelectionModel();
        SQL = new String();
        this.lblTitulo.setText("Certificado de Pago Nro: "+NroCerti.toString());//se establece el t√≠tulo
        
        try{
            cargarDatosObra(NumObra, NroCerti);
            cargarMontos(NumObra);
            cargarCertiPago(NroCerti);
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblNombreObra = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblLocalidad = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblNroObra = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblFechaInicio = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblPlazo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblMontoBase = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMontoActual = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAcumulado = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMes = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        lblAPagar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setText("Certificado de Pago Nro: X");

        jLabel1.setText("Obra: ");

        lblNombreObra.setText("nombreobra");

        jLabel2.setText("Localidad:");

        lblLocalidad.setText("nombrelocalidad");

        jLabel3.setText("Fecha:");

        lblFecha.setText("fecha");

        jLabel4.setText("Nro Obra:");

        lblNroObra.setText("numobra");

        jLabel5.setText("Fecha Inicio:");

        lblFechaInicio.setText("fechainicio");

        jLabel6.setText("Plazo:");

        lblPlazo.setText("plazo");

        jLabel7.setText("Contrato Base:");

        lblMontoBase.setText("$$$$$$$$$$$$$");

        jLabel8.setText("Contrato a Fecha:");

        lblMontoActual.setText("$$$$$$$$$$$$$");

        tblAcumulado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Concepto", "Anterior", "Mes", "Acumulado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAcumulado);

        jLabel9.setText("Este Mes:");

        jLabel10.setText("Acumulado:");

        tblMes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Concepto", "Vivienda", "Infra", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMes);

        jLabel11.setText("Total a pagar:");

        lblAPagar.setText("totalapagar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblMontoBase)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblMontoActual))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblNombreObra))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblLocalidad))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblFecha)))
                                .addGap(153, 153, 153)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblPlazo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblFechaInicio))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNroObra))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(lblTitulo)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblAPagar)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNombreObra)
                    .addComponent(jLabel4)
                    .addComponent(lblNroObra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblLocalidad)
                    .addComponent(jLabel5)
                    .addComponent(lblFechaInicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblFecha)
                    .addComponent(jLabel6)
                    .addComponent(lblPlazo))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblMontoBase)
                    .addComponent(jLabel8)
                    .addComponent(lblMontoActual))
                .addGap(52, 52, 52)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lblAPagar))
                .addGap(31, 31, 31)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
   
    private void cargarDatosObra(Integer NumObra, Integer NroCerti){ //Procedimiento que carga los label con los datos de la obra
        this.SQL = "SELECT o.idobra, l.nomloc, o.nomobra, o.plazo_mes, o.fecinicio, c.fechacert\n"
                 + "FROM obra o\n"
                 + "INNER JOIN localidad l ON o.idlocalidad = l.idlocalidad\n"
                 + "INNER JOIN certipago c ON o.idobra = c.idobra\n"
                 + "WHERE o.numobra =" + NumObra.toString()
                 + "AND c.nrocertificado = " + NroCerti.toString();
        try {
            this.datosObra = this.sqlStmn.executeQuery(SQL);
            if(this.datosObra.next()){
                this.IdObra = this.datosObra.getInt(1); //Este dato se usa luego para calcular los montos
                this.lblLocalidad.setText(this.datosObra.getString(2));
                this.lblNombreObra.setText(this.datosObra.getString(3));
                this.lblPlazo.setText(this.datosObra.getString(4));
                this.lblFechaInicio.setText(this.datosObra.getString(5));
                this.fechaCerti = this.datosObra.getDate(6);
                this.lblFecha.setText(fechaCerti.toString());//se carga la fecha del certificado
                this.SQL = null;//Se limpia el SQL por las dudas
            }else{
                JOptionPane.showMessageDialog(this, "N√∫mero de obra inexistente", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cargarMontos(Integer NumObra){//Procedimiento que carga los label de los contratos
        try {
            CallableStatement proc = con.prepareCall("{CALL PRC_DIFMONTO(?,?,?,?,?)}");
            proc.setInt(1, NumObra);//se setea tipo de dato de pNumObra
            proc.setDate(2, this.fechaCerti);//se setea tipo de dato de pFechaBusq
            proc.registerOutParameter(3, Types.INTEGER); //se setea tipo de dato de pError
            proc.registerOutParameter(4, Types.DOUBLE); //se setea tipo de dato de vMontoBase
            proc.registerOutParameter(5, Types.DOUBLE); //se setea tipo de dato de vMontoRedet
            proc.execute();
            this.lblMontoBase.setText(String.valueOf(proc.getDouble(4)));//Se coloca en el label el valor base
            this.lblMontoActual.setText(String.valueOf(proc.getDouble(5)));//Se coloca en el label el valor actual
            proc.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cargarCertiPago(Integer NroCerti) throws SQLException{
        this.datosMes = this.getDatosMes(NroCerti);
        this.datosAcum = this.getDatosAcum(NroCerti);
        DefaultTableModel tblCPMesModel = (DefaultTableModel) tblMes.getModel();
        //ac√° sigue para cargar las tablas?
    }
    
    
    private ResultSet getDatosMes(Integer NroCerti){
        ResultSet resultado = null;
        try{
            resultado = sqlStmn.executeQuery(SQL);
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return resultado;
    }
    
    private ResultSet getDatosAcum(Integer NroCerti){
        ResultSet resultado = null;
        try{
            resultado = sqlStmn.executeQuery(SQL);  
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return resultado;
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAPagar;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblLocalidad;
    private javax.swing.JLabel lblMontoActual;
    private javax.swing.JLabel lblMontoBase;
    private javax.swing.JLabel lblNombreObra;
    private javax.swing.JLabel lblNroObra;
    private javax.swing.JLabel lblPlazo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblAcumulado;
    private javax.swing.JTable tblMes;
    // End of variables declaration//GEN-END:variables
}
